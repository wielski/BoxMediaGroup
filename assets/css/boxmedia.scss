// out: boxmedia.css

$bg: #fff;
$bg_dark: #402a2a;
$color: #222;
$color-dark: #fff;

$font: "http://fonts.googleapis.com/css?family=Lato:300,400,700";
$font-family: 'Lato', Arial, sans-serif;
$font-weight: 300;
$font-size: 16px;

/* Grid */
$grid-medium: 768px;
$grid-medium-container: 800px;
$grid-large: 1028px;
$grid-large-container: 1100px;
$spacing: 20px;

$grid-columns: (
  span_1 8.33333333333%,
  span_2 16.6666666667%,
  span_3 25%,
  span_4 33.3333333333%,
  span_5 41.6666666667%,
  span_6 50%,
  span_7 58.3333333333%,
  span_8 66.6666666667%,
  span_9 75%,
  span_10 83.3333333333%,
  span_11 91.6666666667%,
  span_12 100%
);
$grid-gutters: (
  span_1 6.5%,
  span_2 15.0%,
  span_3 23.5%,
  span_4 32.0%,
  span_5 40.5%,
  span_6 49.0%,
  span_7 57.5%,
  span_8 66.0%,
  span_9 74.5%,
  span_10 83.0%,
  span_11 91.5%,
  span_12 100%
);


@import url($font);
*, *:after, *:before { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }
.clearfix:before, .clearfix:after { content: ''; display: table; }
.clearfix:after { clear: both; }

html, body, .pagewrap {
	height: 100%;
}

body {
	color: $color;
	font-size: $font-size;
	font-weight: $font-weight;
	line-height: 1.25;
	font-family: $font-family;
}

.wrapper {
	position: relative;
}

.container {
	background: #fff;
	min-height: 100%;
	position: relative;
	outline: 1px solid rgba(0,0,0,0);
	z-index: 10;
	-webkit-transform: translateZ(0) translateX(0) rotateY(0deg); /* reset transforms (Chrome bug) */
	transform: translateZ(0) translateX(0) rotateY(0deg);
}

.container::after {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 0px;
	opacity: 0;
	background: rgba(0,0,0,0.2);
	/* the transition delay of the height needs to be synced with the container transition time */
	-webkit-transition: opacity 0.4s, height 0s 0.4s;
	transition: opacity 0.4s, height 0s 0.4s;
}

a {
	color: rgba(0,0,0,0.25);
	font-weight: bold;
	text-shadow: 0 0 rgba(0,0,0,0);
	text-decoration: none;
	outline: none;
}

a:hover, a:focus {
	color: rgba(0,0,0,0.6);
}

/*****************************/
/* Custom Styles */
/*****************************/

.dots {
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  position: fixed;
  text-align: center;
}
.logo.preloader {
  width: 300px;
  height: 360px;
  background-image: url('../logo.png?v=1');
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -150px;
  margin-top: -180px;
}

section.home {
  display: none;
}
section.home.show {
  display: block;
}

#showMenu {
  border-bottom: 3px solid #ed8151;
  border-top: 3px solid #ed8151;
  display: block;
  height: 13px;
  top: 25px;
  left: 25px;
  position: absolute;
  width: 25px;
  cursor: pointer;
}
#showMenu:after {
  background-color: #ed8151;
  content: "";
  height: 3px;
  left: 0;
  margin-top: -2px;
  position: absolute;
  top: 50%;
  width: 100%;
}

/*****************************/
/* Preloader */
/*****************************/

.pageload-overlay {
	position: fixed;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
  z-index: 1080;
	visibility: hidden;
}

.pageload-overlay.show {
	visibility: visible;
}

.pageload-overlay svg {
	position: absolute;
	top: 0;
	left: 0;
	pointer-events: none;
}

.pageload-overlay svg path {
  fill: #fff;
}

.pageload-overlay::after,
.pageload-overlay::before {
	content: '';
	position: fixed;
	width: 20px;
	height: 20px;
	top: 50%;
	left: 50%;
	margin: -10px 0 0 -10px;
	border-radius: 50%;
	visibility: hidden;
	opacity: 0;
	z-index: 1000;
	-webkit-transition: opacity 0.15s, visibility 0s 0.15s;
	transition: opacity 0.15s, visibility 0s 0.15s;
}

.pageload-overlay::after {
	/* background: #ffffff; */
	background: #6cc88a;
	-webkit-transform: translateX(-20px);
	transform: translateX(-20px);
	-webkit-animation: moveRight 0.6s linear infinite alternate;
	animation: moveRight 0.6s linear infinite alternate;
}

.pageload-overlay::before {
	/* background: #323f44; */
	background: #4fc3f7;
	-webkit-transform: translateX(20px);
	transform: translateX(20px);
	-webkit-animation: moveLeft 0.6s linear infinite alternate;
	animation: moveLeft 0.6s linear infinite alternate;
}

@-webkit-keyframes moveRight {
	to { -webkit-transform: translateX(20px); }
}

@keyframes moveRight {
	to { transform: translateX(20px); }
}

@-webkit-keyframes moveLeft {
	to { -webkit-transform: translateX(-20px); }
}

@keyframes moveLeft {
	to { transform: translateX(-20px); }
}

.pageload-loading.pageload-overlay::after,
.pageload-loading.pageload-overlay::before {
	opacity: 1;
	visibility: visible;
	-webkit-transition: opacity 0.3s;
	transition: opacity 0.3s;
}


/**********/
/* Grid */
/*******/


* {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	*behavior: url(/scripts/boxsizing.htc);
}
.container {
	max-width: $grid-medium-container;
	margin: 0 auto;
  padding: 0 $spacing;
}
.container:after,
.row:after,
.col:after,
.clr:after,
.group:after {
	content: "";
	display: table;
	clear: both;
}
.row { padding-bottom: 0em;
}

.col {
	display: block;
	float: left;
	width: 100%;
  &.hide_s {
    display: none;
  }
}

@media ( min-width : $grid-medium ) {

	.gutters{
    .col {
		    margin-left: 2%;
    }
    .col:first-child {
  	    margin-left: 0;
  	}
	}

}

@media ( min-width : $grid-medium ) {
  .col {
    &.hide_s {
      display: block;
    }
  }

  @each $value in $grid-columns {
    .#{nth($value, 1)} {
        width: nth($value, 2);
    }
  }

	.gutters {
    @each $value in $grid-gutters {
      .#{nth($value, 1)} {
          width: nth($value, 2);
      }
    }
  }
}

@media ( min-width : $grid-large ) {

	.container {
    max-width: $grid-large-container;
  }

}
